$flip-cards-section-widths: (
  s: 334px,
  m: 984px,
  l: 1400px,
);

$flip-cards-widths: (
  s: 300px,
  l: 420px,
);

.section--flip-cards {
  @include rem(margin-bottom, spacing(xxl) * 2 + spacing(xl) * 2);
  margin-left: auto;
  margin-right: auto;
  padding: 0 ($body-padding / 2);

  @include respond-to(breakpoint(s)) {
    @include rem(margin-bottom, spacing(xxl) * 3);
    max-width: map-get($flip-cards-section-widths, s);
  }

  @include respond-to(breakpoint(m)) {
    max-width: map-get($flip-cards-section-widths, m);
  }

  @include respond-to(breakpoint(l)) {
    @include rem(margin-bottom, spacing(xxl) + spacing(xl));
    max-width: map-get($flip-cards-section-widths, l);
  }
}

.flip-cards__header {
  @include rem(margin-bottom, spacing(xxl) + spacing(xxs) + spacing(xxxs));
  padding: 0 ($body-padding / 2);

  @include respond-to(breakpoint(l)) {
    @include rem(margin-bottom, spacing(xl));
  }

  @include respond-to(breakpoint(l)) {
    @include rem(margin-bottom, spacing(xxl) + spacing(xxs));
  }
}

.flip-cards__cards {
  @include respond-to(breakpoint(m)) {
    @include flex(space-between, flex-start, row, nowrap);
  }

  .card-wrapper {
    @include rem(margin-bottom, spacing(xl) + spacing(xxxs));

    @include respond-to(breakpoint(m)) {
      @include flex-basis(map-get($flip-cards-widths, s));
      @include rem(margin-right, spacing(xxxs));
      height: 100%;

      &:last-of-type {
        margin-right: 0;
      }
    }

    @include respond-to(breakpoint(l)) {
      @include flex-basis(map-get($flip-cards-widths, l));
    }

    @for $i from 1 through 3 {
      &:nth-of-type(#{$i}) .card:first-of-type .card__inner {
        @extend %number-background--#{$i};
      }
    }

    .card__inner {
      background-size: auto 75%;
      background-position: -1 * spacing(xs) calc(100% + #{spacing(xxxs)});
      background-repeat: no-repeat;
    }
  }
}
