.section--social-feed {
  padding: 0 spacing(xxxs) * 0.5;
}

.social-feed__title,
.social-feed__hashtag {
  text-align: center;
}

.social-feed__title {
  @include rem(padding, 0 spacing(xs));
  color: $tscMediumGrey;
  font-size: fs(m);
  line-height: 1;
  margin: 0;

  @include respond-to(breakpoint(l)) {
    font-size: fs(l);
  }
}

.social-feed__hashtag {
  @include rem(margin-bottom, spacing(xl));
  font-size: fs(m);
  font-weight: fw(semibold);
  line-height: 1;
  text-transform: none;

  @include respond-to(breakpoint(m)) {
    @include rem(margin-bottom, spacing(m));
    font-size: fs(xl);
  }

  @include respond-to(breakpoint(l)) {
    @include rem(margin-bottom, spacing(m) + 6px);
    font-size: fs(xxl);
  }
}

.social-feed__feed-wrapper {
  @include rem(margin-bottom, spacing(xxl) * 2);
  overflow: hidden;
  position: relative;

  @include respond-to(breakpoint(s)) {
    @include flex(space-between, stretch, row, wrap);
    margin: 0 auto;
    max-width: none;
    text-align: left;
  }

  @include respond-to(breakpoint(m)) {
    @include rem(margin-bottom, spacing(xl) * 2 + spacing(s));
    -webkit-flex-wrap: nowrap;
    flex-wrap: nowrap;

    &:after,
    &:before {
      @include rem(width, spacing(s));
      background: $tscWhite;
      content: '';
      display: block;
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      z-index: 1;
    }

    &:after {
      left: auto;
      right: 0;
    }
  }

  @include respond-to(breakpoint(l)) {
    @include rem(margin-bottom, spacing(xl) * 4);
    max-width: 1315px;

    &:after,
    &:before {
      @include rem(width, spacing(xl));
    }
  }
}

.social-feed__feed {
  text-align: center;
  width: 100%;

  @include respond-to(breakpoint(m)) {
    white-space: nowrap;
  }
}

.social-feed__feed--loaded {
  text-align: left;

  .social-feed__post--fallback {
    @include flex($inline: 'inline-');
    border: 1px solid rgb(219, 219, 219);
    border-radius: border-radius(s);
    height: 100%;

    .button {
      background: transparent;
      box-sizing: border-box;
      color: $tscMediumGrey;
      display: inline-block;
      margin-top: 0;
      white-space: normal;
    }

    &:hover {
      border-color: $tscBlack;

      .button {
        color: $tscBlack;
      }
    }
  }
}

.social-feed__button {
  @include appearance(none);
  background: transparent;
  border: none;
  cursor: pointer;
  display: none;

  &:last-of-type {
    @extend .button;
    @extend .button--anchor;
    display: block;
  }

  @include respond-to(breakpoint(m)) {
    @include rem(width, spacing(m));
    @include rem(height, spacing(m));
    @include transform-origin(center center);
    @include transform(rotate(180deg));
    @include transition(opacity 250ms);
    -webkit-align-self: center;
    align-self: center;
    display: block;
    opacity: 0.8;
    z-index: 2;
    // weird selectors to override .button styling
    &,
    &:last-of-type,
    &:last-of-type:hover,
    &:last-of-type:focus {
      @include play-icon('9e9e9e');
      background-position: center center;
      background-repeat: no-repeat;
      background-size: contain;
      outline: none;
    }

    &:last-of-type {
      @include transform(none);
      font-size: 0;
      padding: 0;
    }

    &:hover {
      opacity: 1;
    }
  }

  @include respond-to(breakpoint(l)) {
    @include rem(margin-right, spacing(s));
    @include rem(width, spacing(xl));
    @include rem(height, spacing(xl));

    &:last-of-type {
      @include rem(margin, 0 0 0 spacing(s));
    }
  }
}

.social-feed__button--hidden {
  pointer-events: none;
  visibility: hidden;
}

.social-feed__post {
  @include rem(padding, spacing(xxxs) * 0.5 0);
  box-sizing: border-box;
  width: 100%;

  .social-feed__post--current ~ &:not(.social-feed__post--current) {
    display: none;
  }

  @include respond-to(breakpoint(s)) {
    @include rem(padding, spacing(xxxs) * 0.5);
    display: inline-block;
    vertical-align: top;
    width: 50%;
  }

  @include respond-to(breakpoint(m)) {
    @include rem(padding, 0 1px);
    @include transitionTransform(transform 1s);
    @include transform(translateX(-100vw));
    position: absolute;
    width: 25%;

    &.social-feed__post--current {
      @include transform(translateX(0));
      position: static;
    }

    .social-feed__post--current ~ &:not(.social-feed__post--current) {
      @include transform(translateX(100vw));
      position: absolute;
      display: block;
    }
  }
  // override the default IG style attribute
  iframe {
    @include transformStyle(preserve-3d);
    box-sizing: border-box;
    margin-right: 0 !important;
    margin-bottom: 0 !important;
    max-width: none !important;
  }
}
