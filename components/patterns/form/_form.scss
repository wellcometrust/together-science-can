$form-widths: (
  s: 334px,
  m: 1024px,
  l: 1230px,
);

.section-wrapper--form {
  max-width: map-get($form-widths, s);
  margin-left: auto;
  margin-right: auto;

  @include respond-to(breakpoint(m)) {
    max-width: map-get($form-widths, m);
  }

  @include respond-to(breakpoint(l)) {
    max-width: map-get($form-widths, l);
  }
}

.section--form {
  background: $tscLighterGrey;
  padding-top: spacing(m);
  padding-bottom: spacing(m);

  @include respond-to(breakpoint(m)) {
    border-radius: border-radius(l);
    padding: spacing(l) spacing(l) spacing(m);
  }
}

.form__title,
.form__footer {
  text-align: center;
}

.form__footer {
  display: none;

  @include respond-to(breakpoint(m)) {
    display: block;
    font-size: fs(xxxs);
    line-height: lh(xxxs);
  }

  @include respond-to(breakpoint(l)) {
    font-size: fs(xxs);
    line-height: lh(xxs);
  }
}

.form__success {
  @include transition(opacity 0.5s 0.25s);
  position: absolute;
  opacity: 0;
  z-index: -1;

  &.form__success--visible {
    display: block;
    opacity: 1;
    position: relative;
    z-index: 1;
  }
}

.form__success__body {
  margin: 0;
  text-align: center;

  @include respond-to(breakpoint(l)) {
    font-size: fs(m);
    line-height: lh(m);
  }
}

.form__content {
  @include transition(opacity 0.5s);
}

.form__content--success {
  opacity: 0;
  position: absolute;
  z-index: -1;
}

.form {
  @include respond-to(breakpoint(m)) {
    @include flex(space-between, flex-end, row, wrap);

    .card & {
      display: block;
      text-align: left;
      max-width: 250px;
      margin: 0 auto;
    }
  }
}

.form__element {
  @include rem(margin-top, spacing(s));
  display: block;
  position: relative;

  &:nth-last-of-type(2) {
    @include rem(padding-bottom, spacing(xxxs));
  }

  @include respond-to(breakpoint(m)) {
    &, &:nth-last-of-type(2) {
      padding: 0;
    }
  }

  .card & {
    @include rem(margin-top, spacing(xs));

    &:last-of-type {
      @include rem(margin-top, spacing(xxxs) * 2);
    }
  }

  label {
    display: block;
    @include rem(margin-bottom, spacing(xxs));

    .card & {
      @include rem(margin-bottom, spacing(xxxs));
    }
  }

  label, input, textarea, select {
    box-sizing: border-box;
    font-size: fs(xxxs);
    font-weight: fw(bold);
    // slightly increase LH because of Firefox cutting off descenders
    line-height: fs(xxxs) + 3px;

    @include respond-to(breakpoint(l)) {
      font-size: fs(xxs);
      line-height: fs(xxs) + 3px;
    }
  }

  input:not([type=submit]),
  textarea,
  select {
    @include appearance(none);
    background: transparent;
    border-radius: border-radius(s);
    border: solid 1px $tscBlack;
    padding: spacing(xxs);
    width: 100%;
  }

  select {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='9' height='21' viewBox='0 0 9 21'%3E%3Cdefs%3E%3Cstyle%3E.cls-1 %7Bfill-rule: evenodd;%7D%3C/style%3E%3C/defs%3E%3Cpath id='Polygon_1_copy_4' data-name='Polygon 1 copy 4' class='cls-1' d='M1280.5,978l4.5,7h-9Zm0,21-4.5-7h9Z' transform='translate(-1276 -978)'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: calc(100% - #{spacing(xxs)}) center;

    @include respond-to(breakpoint(l)) {
      line-height: fs(xxs) + 3px; // correcting for Chrome's weirdness
    }
  }

  input[type=submit] {
    cursor: pointer;
    padding-left: spacing(l);
    padding-right: spacing(l);
    line-height: fs(xxs) - 3px; // more Chrome weirdness

    @include respond-to(breakpoint(l)) {
      line-height: fs(xxs);
    }
  }
}

.form__element--long {
  flex-basis: 25%;
}

.form__footer {
  @include rem(padding-top, spacing(xxs));
  margin-bottom: 0;
}

.ajax-enabler {
  display: none;
}

.form__element__error {
  bottom: -1.7em;
  color: $tscRed;
  display: none;
  font-size: fs(xxxs);
  left: 0;
  margin: 0;
  position: absolute;
  white-space: nowrap;

  @include respond-to(breakpoint(m)) {
    bottom: -2em;
    font-size: fs(xxs);
  }
}

.form-item--invalid.form-item--invalid.form-item--invalid {
  // need to override quite specific styling of the input elements
  border-color: $tscRed;
  outline-color: $tscRed;
  background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill:%23f54337;%7D%3C/style%3E%3C/defs%3E%3Cg id='Layer_2'%3E%3Cg id='Layer_1-2'%3E%3Cpath class='cls-1' d='M10,20A10,10,0,1,1,20,10,10,10,0,0,1,10,20M10,2.07A7.93,7.93,0,1,0,17.93,10,7.94,7.94,0,0,0,10,2.07'/%3E%3Cpath class='cls-1' d='M8.73,14.33a1.18,1.18,0,0,1,.37-.87,1.23,1.23,0,0,1,.9-.36,1.28,1.28,0,0,1,.89.35,1.12,1.12,0,0,1,.38.86,1.17,1.17,0,0,1-.37.87,1.28,1.28,0,0,1-1.38.27,1.32,1.32,0,0,1-.4-.25,1.16,1.16,0,0,1-.28-.38,1.12,1.12,0,0,1-.1-.48'/%3E%3Crect class='cls-1' x='9.05' y='4.21' width='1.9' height='7.71' rx='0.5' ry='0.5'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E ") no-repeat;
  background-size: auto 50%;
  background-position: spacing(xxs) spacing(xxxs);
  padding-left: spacing(l);

  & ~ .form__element__error {
    display: block;
  }
}
